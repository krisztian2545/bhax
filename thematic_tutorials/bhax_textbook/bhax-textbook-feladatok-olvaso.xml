<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Olvasónapló!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
<section>
<title>Juhász István féle könyv</title>
<para>Egy számítógép programozására három nyelvi szintet különböztetünk meg:</para>
<para>-Gépi kód</para>
<para>-assembly szint</para>
<para>-Magas szint</para>
<para>Mink a magas szintű programozási nyelvekkel foglalkozunk. A magas szintű nyelven megírt forrásszöveg helyesírását szintaktikának, jelentését szemantikának nevezzük. Egy magas szintű programozási nyelvet ez a kettő határoz meg. A processzor csak a gépi kódot érti, ezért a gépi kód előállításához vagy fordítót vagy interpretert kell használnunk. A fordítóprogram a lexikális elemzés, szintaktikai elemzés, szemantikai elemzés és kódgenerálás lépések végrehajtásával állítja elő a forrásszövegből a tárgyprogramot. Az interpreteres módszer is elvégzi az első 3 lépést, viszont tárgyprogramot nem készít, ehelyett soronként értelmezi és végrehajtja az utasításokat. A programnyelv szabványát hivatkozási nyelvnek hivjuk, ahol a szintaktikai és szemantikai szabályok vannak részletezve. A programok írásához leggyakrabban integrált fejlesztői környezetet (IDE - Integrated Development Enviroment) használunk, amelyek nagyban megkönnyítik a nagyobb projektek kezelését. Ezek tartalmazzák a szövegszerkesztőt, fordítót / interpretert és futtató rendszert. Az imperatív nyelvek algoritmusokból állnak. Ezek lehetnek eljárásorientált vagy objektumorientált nyelvek. És vannak a deklaratív nyelvek. Ezek nem algoritmikusak és a programozó csak a problémát adja meg, a nyelvi implementációba van beépítve a megoldás módja.</para>

<para>
</para>
</section>

<section>
<title>K &amp; R, A C programozási nyelv</title>
<para>A változók és az állandók a programok alapvető részei. A deklaŕalásuk során megadjuk a nevüket, típusukat és esetleg a kezdeti értéküket. A nevekre nézve vannak némi megkötések, pl.: nem tartalmazhat pontot, nem lehetnek kulcsszavak (mint if, else, int), stb.</para>
<para>A c-ben csak néhány alapvető adattípus van:
</para>
<itemizedlist>
            <listitem>
                <para>
                    int - egész szám
                </para>
            </listitem>
            <listitem>
                <para>
                    float - egyszeres pontosságú lebegőpontos szám
                </para>
            </listitem>
            <listitem>
                <para>
                    double - kétszeres pontosságú lebegőpontos szám
                </para>
            </listitem>
        </itemizedlist>
    <para>Ezt kiegészíthetjük a <function>short</function>, <function>long</function> és <function>unsigned</function> minősítő szimbólumokkal. A <function>short</function> és a <function>long</function> a méretét szabályozza.  Az <function>unsigned</function>(előjel nélküli) számokra a modulo 2n aritmetika szabályai vonatkoznak, ahol n az int típust ábrázolóbit-ek száma; az unsigned számok mindig pozitívak. 
    </para>
    <programlisting><![CDATA[   short int x;
    long int y;
    unsigned int z;]]>
    </programlisting>
</section>

<section>
<title></title>
<para></para>
</section>
</chapter>